),
selectInput(inputId = "parameter",
label = "label of parameter",
choices = option_parameter,
selected = "PH"
),
textInput(inputId = "parameter_label",
label = "parameter",
value = ""
),
textInput(inputId = "plot_title",
label = "title of plt",
value = "")
),
mainPanel(
plotlyOutput(outputId = "aq_plot")
)
)
)
server <- function(input, output, session) {
aq_plot <- reactive({
water %>%
filter(STATION.CODE %in% input$code) %>%
ggplot(aes_string(x = "year", y = input$parameter, colour = "STATION.CODE")) +
geom_line() +
labs(
x = "",
y = ifelse(input$parameter_label == "", input$parameter, input$parameter_label),
colour = "STATION.CODE",
title = input$plot_title
) +
theme_light()
})
output$aq_plot <- renderPlotly({
ggplotly(aq_plot())
})
}
shinyApp(ui = ui, server = server, options = list(height = "500px"))
shinyApp(ui = ui, server = server)
ui <- fluidPage(
title = "Water Quality",
headerPanel("Water Quality in India"),
sidebarLayout(
sidebarPanel (
selectInput(inputId = "code",
label = "station code",
choices = option_station,
multiple = TRUE,
selected = option_parameter[[1]]
),
selectInput(inputId = "parameter",
label = "label of parameter",
choices = option_parameter,
selected = "PH"
),
textInput(inputId = "parameter_label",
label = "parameter",
value = ""
),
textInput(inputId = "plot_title",
label = "title of plt",
value = "")
),
mainPanel(
plotlyOutput(outputId = "aq_plot")
)
)
)
server <- function(input, output, session) {
aq_plot <- reactive({
water %>%
filter(STATION.CODE %in% input$code) %>%
ggplot(aes_string(x = "year", y = input$parameter, colour = "STATION.CODE")) +
geom_line() +
labs(
x = "",
y = ifelse(input$parameter_label == "", input$parameter, input$parameter_label),
colour = "STATION.CODE",
title = input$plot_title
) +
theme_light()
})
output$aq_plot <- renderPlotly({
ggplotly(aq_plot())
})
}
shinyApp(ui = ui, server = server)
knitr::opts_chunk$set(echo = TRUE)
library(shiny)
library(here)
library(vroom)
library(dplyr)
library(ggplot2)
library(plotly)
water = read.csv("water.csv", TRUE)
option_station <- unique(water["STATION.CODE"])
option_parameter <- colnames(water)[-c(2,3,12)]
knitr::opts_chunk$set(echo = TRUE)
library(shiny)
library(here)
library(vroom)
library(dplyr)
library(ggplot2)
library(plotly)
water = read.csv("water.csv", TRUE)
option_station <- unique(water["STATION.CODE"])
option_parameter <- colnames(water)[-c(2,3,12)]
ui <- fluidPage(
title = "Water Quality",
headerPanel("Water Quality in India"),
sidebarLayout(
sidebarPanel (
selectInput(inputId = "code",
label = "station code",
choices = option_station,
multiple = TRUE,
selected = option_parameter[[1]]
),
selectInput(inputId = "parameter",
label = "label of parameter",
choices = option_parameter,
selected = "PH"
),
textInput(inputId = "params_label",
label = "parameter",
value = ""
),
textInput(inputId = "title",
label = "title",
value = "")
),
mainPanel(
plotlyOutput(outputId = "water_plot")
)
)
)
server <- function(input, output, session) {
aq_plot <- reactive({
water %>%
filter(STATION.CODE %in% input$code) %>%
ggplot(aes_string(x = "year", y = input$parameter, colour = "STATION.CODE")) +
geom_line() +
labs(
x = "",
y = ifelse(input$params_label == "", input$parameter, input$params_label),
colour = "STATION.CODE",
title = input$title
) +
theme_light()
})
output$water_plot <- renderPlotly({
ggplotly(water_plot())
})
}
shinyApp(ui = ui, server = server)
server <- function(input, output, session) {
aq_plot <- reactive({
water %>%
filter(STATION.CODE %in% input$code) %>%
ggplot(aes_string(x = "year", y = input$parameter, colour = "STATION.CODE")) +
geom_line() +
labs(
x = "",
y = ifelse(input$params_label == "", input$parameter, input$params_label),
colour = "STATION.CODE",
title = input$title
) +
theme_light()
})
output$water_plot <- renderPlotly({
ggplotly(water_plot())
})
}
shinyApp(ui = ui, server = server)
knitr::opts_chunk$set(echo = TRUE)
library(shiny)
library(here)
library(vroom)
library(dplyr)
library(ggplot2)
library(plotly)
water = read.csv("water.csv", TRUE)
option_station <- unique(water["STATION.CODE"])
option_parameter <- colnames(water)[-c(2,3,12)]
ui <- fluidPage(
title = "Water Quality",
headerPanel("Water Quality in India"),
sidebarLayout(
sidebarPanel (
selectInput(inputId = "code",
label = "station code",
choices = option_station,
multiple = TRUE,
selected = option_parameter[[1]]
),
selectInput(inputId = "parameter",
label = "label of parameter",
choices = option_parameter,
selected = "PH"
),
textInput(inputId = "params_label",
label = "parameter",
value = ""
),
textInput(inputId = "title",
label = "title",
value = "")
),
mainPanel(
plotlyOutput(outputId = "water_plot")
)
)
)
server <- function(input, output, session) {
aq_plot <- reactive({
water %>%
filter(STATION.CODE %in% input$code) %>%
ggplot(aes_string(x = "year", y = input$parameter, colour = "STATION.CODE")) +
geom_line() +
labs(
x = "",
y = ifelse(input$params_label == "", input$parameter, input$params_label),
colour = "STATION.CODE",
title = input$title
) +
theme_light()
})
output$water_plot <- renderPlotly({
ggplotly(water_plot())
})
}
shinyApp(ui = ui, server = server)
server <- function(input, output, session) {
aq_plot <- reactive({
water %>%
filter(STATION.CODE %in% input$code) %>%
ggplot(aes_string(x = "year", y = input$parameter, colour = "STATION.CODE")) +
geom_line() +
labs(
x = "",
y = ifelse(input$params_label == "", input$parameter, input$params_label),
colour = "STATION.CODE",
title = input$title
) +
theme_light()
})
output$aq_plot <- renderPlotly({
ggplotly(aq_plot())
})
}
shinyApp(ui = ui, server = server)
knitr::opts_chunk$set(echo = TRUE)
library(shiny)
library(here)
library(vroom)
library(dplyr)
library(ggplot2)
library(plotly)
water = read.csv("water.csv", TRUE)
option_station <- unique(water["STATION.CODE"])
option_parameter <- colnames(water)[-c(2,3,12)]
ui <- fluidPage(
title = "Water Quality",
headerPanel("Water Quality in India"),
sidebarLayout(
sidebarPanel (
selectInput(inputId = "code",
label = "station code",
choices = option_station,
multiple = TRUE,
selected = option_parameter[[1]]
),
selectInput(inputId = "parameter",
label = "label of parameter",
choices = option_parameter,
selected = "PH"
),
textInput(inputId = "parameter_label",
label = "parameter",
value = ""
),
textInput(inputId = "plot_title",
label = "title of plt",
value = "")
),
mainPanel(
plotlyOutput(outputId = "aq_plot")
)
)
)
server <- function(input, output, session) {
aq_plot <- reactive({
water %>%
filter(STATION.CODE %in% input$code) %>%
ggplot(aes_string(x = "year", y = input$parameter, colour = "STATION.CODE")) +
geom_line() +
labs(
x = "",
y = ifelse(input$parameter_label == "", input$parameter, input$parameter_label),
colour = "STATION.CODE",
title = input$plot_title
) +
theme_light()
})
output$aq_plot <- renderPlotly({
ggplotly(aq_plot())
})
}
shinyApp(ui = ui, server = server)
knitr::opts_chunk$set(echo = TRUE)
library(shiny)
library(here)
library(vroom)
library(dplyr)
library(ggplot2)
library(plotly)
water = read.csv("water.csv", TRUE)
option_station <- unique(water["STATION.CODE"])
option_parameter <- colnames(water)[-c(2,3,12)]
ui <- fluidPage(
title = "Water Quality",
headerPanel("Water Quality in India"),
sidebarLayout(
sidebarPanel (
selectInput(inputId = "code",
label = "station code",
choices = option_station,
multiple = TRUE,
selected = option_parameter[[1]]
),
selectInput(inputId = "parameter",
label = "label of parameter",
choices = option_parameter,
selected = "PH"
),
textInput(inputId = "parameter_label",
label = "parameter",
value = ""
),
textInput(inputId = "plot_title",
label = "title of plt",
value = "")
),
mainPanel(
plotlyOutput(outputId = "water_plot")
)
)
)
server <- function(input, output, session) {
aq_plot <- reactive({
water %>%
filter(STATION.CODE %in% input$code) %>%
ggplot(aes_string(x = "year", y = input$parameter, colour = "STATION.CODE")) +
geom_line() +
labs(
x = "",
y = ifelse(input$parameter_label == "", input$parameter, input$parameter_label),
colour = "STATION.CODE",
title = input$plot_title
) +
theme_light()
})
output$water_plot <- renderPlotly({
ggplotly(water_plot())
})
}
shinyApp(ui = ui, server = server)
server <- function(input, output, session) {
aq_plot <- reactive({
water %>%
filter(STATION.CODE %in% input$code) %>%
ggplot(aes_string(x = "year", y = input$parameter, colour = "STATION.CODE")) +
geom_line() +
labs(
x = "",
y = ifelse(input$parameter_label == "", input$parameter, input$parameter_label),
colour = "STATION.CODE",
title = input$plot_title
) +
theme_light()
})
output$aq_plot <- renderPlotly({
ggplotly(aq_plot())
})
}
shinyApp(ui = ui, server = server)
ui <- fluidPage(
title = "Water Quality",
headerPanel("Water Quality in India"),
sidebarLayout(
sidebarPanel (
selectInput(inputId = "code",
label = "station code",
choices = option_station,
multiple = TRUE,
selected = option_parameter[[1]]
),
selectInput(inputId = "parameter",
label = "label of parameter",
choices = option_parameter,
selected = "PH"
),
textInput(inputId = "parameter_label",
label = "parameter",
value = ""
),
textInput(inputId = "plot_title",
label = "title of plt",
value = "")
),
mainPanel(
plotlyOutput(outputId = "aq_plot")
)
)
)
ui <- fluidPage(
title = "Water Quality",
headerPanel("Water Quality in India"),
sidebarLayout(
sidebarPanel (
selectInput(inputId = "code",
label = "station code",
choices = option_station,
multiple = TRUE,
selected = option_parameter[[2]]
),
selectInput(inputId = "parameter",
label = "label of parameter",
choices = option_parameter,
selected = "PH"
),
textInput(inputId = "parameter_label",
label = "parameter",
value = ""
),
textInput(inputId = "plot_title",
label = "title of plt",
value = "")
),
mainPanel(
plotlyOutput(outputId = "aq_plot")
)
)
)
server <- function(input, output, session) {
aq_plot <- reactive({
water %>%
filter(STATION.CODE %in% input$code) %>%
ggplot(aes_string(x = "year", y = input$parameter, colour = "STATION.CODE")) +
geom_line() +
labs(
x = "",
y = ifelse(input$parameter_label == "", input$parameter, input$parameter_label),
colour = "STATION.CODE",
title = input$plot_title
) +
theme_light()
})
output$aq_plot <- renderPlotly({
ggplotly(aq_plot())
})
}
shinyApp(ui = ui, server = server)
shinyApp(ui = ui, server = server)
server <- function(input, output, session) {
aq_plot <- reactive({
water %>%
filter(STATION.CODE %in% input$code) %>%
ggplot(aes_string(x = "year", y = input$parameter, colour = "STATION.CODE")) +
geom_line() +
labs(
x = "",
y = ifelse(input$parameter_label == "", input$parameter, input$parameter_label),
colour = "STATION.CODE",
title = input$plot_title
) +
theme_light()
})
output$aq_plot <- renderPlotly({
ggplotly(aq_plot())
})
}
ui <- fluidPage(
title = "Water Quality",
headerPanel("Water Quality in India"),
sidebarLayout(
sidebarPanel (
selectInput(inputId = "code",
label = "station code",
choices = option_station,
multiple = TRUE,
selected = option_parameter[[2]]
),
selectInput(inputId = "parameter",
label = "label of parameter",
choices = option_parameter,
selected = "PH"
),
textInput(inputId = "parameter_label",
label = "parameter",
value = ""
),
textInput(inputId = "plot_title",
label = "title of plt",
value = "")
),
mainPanel(
plotlyOutput(outputId = "aq_plot")
)
)
)
shinyApp(ui = ui, server = server)
